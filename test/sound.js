(function (window, document, Paladin, undefined) {
  module("Paladin sound", {
    setup: function () {
    },
    teardown: function () {
    }
  });

  var fx = SoundEffects;

  test("SoundEffects allows volume and muted changes.", function() {
    expect(8);
    ok(fx.muted === false, "SoundEffects has muted property");
    ok(fx.volume, "SoundEffects has volume property");

    fx.muted = true;
    ok(fx.muted === true, "SoundEffects allows muted to be set true");
    fx.muted = false;
    ok(fx.muted === false, "SoundEffects allows muted to be set false");

    fx.volume = 0;
    equal(fx.volume, 0, "SoundEffects volume can be set to 0");
    fx.volume = -56;
    equal(fx.volume, 0, "SoundEffects volumes less than 0 are normalized to 0");
    fx.volume = 0.5;
    equal(fx.volume, 0.5, "SoundEffects volumes between 0 and 1.0 are allowed");
    fx.volume = 1.1;
    equal(fx.volume, 1.0, "SoundEffects volumes greater than 1.0 are normalized to 1.0");
  });

  var testSound = { 'blip': "data:audio/wav;base64,UklGRswJAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YagJAAAnQJ0b4wseBTMC8gBoACwAEwAIAAMAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwls+7peJd84/6qP39/pD/0P/r//f//P/+//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+IdV49ahpfC+UEGwLoAGMAKwASAAcAAwABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFstGrw9tm8Ej5HP3B/nb/xP/m//X/+//9//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////9BXMNLnSAKDgsGmQIeAXsANQAWAAkABAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx1RGYQtO97LX3bvx2/lb/t//g//L/+v/9//7///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8NPYldQyhVEXYHNgNhAZgAQQAcAAwABQACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDxMg56MP1mPsa/i//pv/Z/+//+P/8//7///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+HFnpztTFlFTYJ9wO0AbwAUAAiAA8ABgACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCWz7ul4l3zj/qo/f3+kP/Q/+v/9//8//7//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////4h1Xj1qGl8L5QQbAugAYwArABIABwADAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIWy0avD22bwSPkc/cH+dv/E/+b/9f/7//3//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////0Fcw0udIAoOCwaZAh4BewA1ABYACQAEAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHVEZhC073stfdu/Hb+Vv+3/+D/8v/6//3//v///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////w09iV1DKFURdgc2A2EBmABBABwADAAFAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIPEyDnow/WY+xr+L/+m/9n/7//4//z//v///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////4cWenO1MWUVNgn3A7QBvABQACIADwAGAAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcJbPu6XiXfOP+qj9/f6Q/9D/6//3//z//v//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////iHVePWoaXwvlBBsC6ABjACsAEgAHAAMAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhbLRq8PbZvBI+Rz9wf52/8T/5v/1//v//f////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8=" };

  test("SoundEffects invalid calls before init()", function() {
    expect(2);
    raises(function() { fx.effectNames; }, "Accessing effectNames before init() not allowed");
    raises(function() { fx.play('foo'); }, "Calling play() before init() not allowed");
    stop();
    fx.init({
      sounds: testSound,
      callback: function() { start(); }
    });
  });

  asyncTest("SoundEffects init() callback", function() {
    expect(5);
    equal(fx.readyState, SoundEffects.READY, "SoundEffects init() sets ready state to READY when done");
    deepEqual(fx.effectNames, ['blip'], "SoundEffects reports proper effect names after init() completes");
    raises(function() { fx.init(); }, "Calling init() twice not allowed");

    // Mute so test doens't make sound
    fx.muted = true;
    ok(fx.play('blip') === undefined, "Playing an effect doesn't throw after init() is done");
    raises(function() { fx.play('nothing'); }, "Play throws if given unknown effect name");
    start();
  });
})(window, window.document, Paladin);
